---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: homeassistant
  name: homeassistant
  namespace: homeassistant

spec:
  selector:
    matchLabels:
      app: homeassistant
  template:
    metadata:
      labels:
        app: homeassistant
    spec:
      containers:
        - image: ghcr.io/home-assistant/home-assistant:stable
          imagePullPolicy: Always
          name: homeassistant
          env:
            - name: TZ
              value: Europe/Berlin"
          securityContext:
            privileged: True
          ports:
            - containerPort: 8123
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: '/config'
            - name: localtime
              mountPath: 'etc/localtime'
              readOnly: true
          resources:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 2Gi
              cpu: 1
      restartPolicy: Always
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: homeassistant-pvc
        - name: localtime
          hostPath:
            path: /etc/localtime
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mosquitto
  name: mosquitto
  namespace: homeassistant

spec:
  selector:
    matchLabels:
      app: mosquitto
  template:
    metadata:
      labels:
        app: mosquitto
    spec:
      containers:
      - name: mosquitto
        image: eclipse-mosquitto:2.0
        resources:
          requests:
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 1883
        volumeMounts:
            - name: mosquitto-config
              mountPath: /mosquitto/config/mosquitto.conf
              subPath: mosquitto.conf
      volumes:
        - name: mosquitto-config
          configMap:
            name: mosquitto-config
---
apiVersion: apps/v1
kind: Deployment

metadata:
  creationTimestamp: null
  labels:
    app: zigbee2mqtt
  name: zigbee2mqtt
  namespace: homeassistant

spec:
  replicas: 1
  selector:
    matchLabels:
      app: zigbee2mqtt
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: zigbee2mqtt
    spec:
      containers:
        - name: zigbee2mqtt
          image: koenkk/zigbee2mqtt:latest-dev
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: Europe/Berlin
            - name: "ZIGBEE2MQTT_DATA"
              value: "/data"
            - name: "ZIGBEE2MQTT_CONFIG_SERIAL_PORT"
              value: "/dev/ttyUSB0"
            - name: "ZIGBEE2MQTT_CONFIG_MQTT_SERVER"
              value: "mqtt://mosquitto.homeassistant"
            - name: "ZIGBEE2MQTT_DEVICES"
              value: "/data/devices.yaml"
          securityContext:
            privileged: true
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data
            # - name: zigbee2mqtt-config
            #   mountPath: /data/configuration.yaml
            #   subPath: configuration.yaml
            #   readOnly: false
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
          resources:
            limits: 
              squat.ai/sonoff-zigbee: 1
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: zigbee2mqtt-pvc
---
apiVersion: apps/v1
kind: Deployment

metadata:
  name: node-red
  namespace: homeassistant
  labels:
    app: node-red

spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-red
  template:
    metadata:
      labels:
        app: node-red
    spec:
      containers:
      - name: node-red
        image: nodered/node-red:latest
        ports:
        - containerPort: 1880
          name: node-red-ui
        securityContext:
          privileged: true
        volumeMounts:
        - name: data
          mountPath: /data
          readOnly: false
        env:
        - name: TZ
          value: America/Chicago
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: node-red-pvc
